{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","data","setData","useEffect","axios","get","params","num","token","then","goto","useCallback","item","window","location","href","url","className","justify","align","map","span","message","hot_word","type","action","size","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA2DeA,MAhDf,WACE,MAAwBC,mBAAmB,IAA3C,mBAAOC,EAAP,KAAaC,EAAb,KAGAC,qBAAU,WACRC,IAAMC,IAAI,oCAAqC,CAC7CC,OAAQ,CACNC,IAAK,GACLC,MAAO,sBAERC,MAAK,YACN,OADoB,EAAXR,QAERQ,MAAK,YAAe,IAAZR,EAAW,EAAXA,KACTC,EAAQD,QAET,IAEH,IAAMS,EAAOC,uBAAY,SAACC,GACxBC,OAAOC,SAASC,KAAOH,EAAKI,MAC3B,IAEH,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAKC,QAAQ,gBAAgBC,MAAM,SAAnC,SAEIlB,EAAKmB,KAAI,SAAAR,GACP,OACE,cAAC,IAAD,CAAKS,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,QAASV,EAAKW,SACdC,KAAK,OACLC,OACE,cAAC,IAAD,CAAQC,KAAK,QAAQC,QAAS,kBAAMjB,EAAKE,IAAOY,KAAK,OAArD,qBALcZ,EAAKW,oBCzB1BK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.62779018.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { Alert, Button, Row, Col } from 'antd'\nimport axios from 'axios'\nimport './App.css'\n\ninterface IData{\n  hot_word: string,\n  hot_word_num: string,\n  url: string\n}\n\nfunction App() {\n  const [data, setData] = useState<IData []>([])\n\n\n  useEffect(() => {\n    axios.get('https://v2.alapi.cn/api/new/wbtop', {\n      params: {\n        num: 50,\n        token: 'YaXkpHvm3IgSheyj'\n      }\n    }).then(({ data }) => {\n      return data\n    }).then(({ data }) => {\n      setData(data)\n    })\n  }, [])\n\n  const goto = useCallback((item: IData) => {\n    window.location.href = item.url\n  }, [])\n\n  return (\n    <div className='App'>\n      <div className='App-header'>\n        <Row justify='space-between' align='middle'>\n          {\n            data.map(item => {\n              return (\n                <Col span={10} key={item.hot_word}>\n                  <Alert\n                    message={item.hot_word}\n                    type='info'\n                    action={\n                      <Button size='small' onClick={() => goto(item)} type='text'>\n                        goto\n                      </Button>\n                    }\n                  />\n                </Col>\n              )\n            })\n          }\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}